// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.200703.9

#ifndef WINRT_Microsoft_UI_Xaml_Controls_Primitives_0_H
#define WINRT_Microsoft_UI_Xaml_Controls_Primitives_0_H
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls
{
    struct ColorChangedEventArgs;
    enum class ColorPickerHsvChannel : int32_t;
    enum class ColorSpectrumComponents : int32_t;
    enum class ColorSpectrumShape : int32_t;
}
WINRT_EXPORT namespace winrt::Windows::Foundation
{
    struct EventRegistrationToken;
    struct Rect;
    template <typename TSender, typename TResult> struct __declspec(empty_bases) TypedEventHandler;
}
WINRT_EXPORT namespace winrt::Windows::Foundation::Numerics
{
}
WINRT_EXPORT namespace winrt::Windows::UI
{
    struct Color;
}
WINRT_EXPORT namespace winrt::Windows::UI::Xaml
{
    struct DependencyProperty;
}
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Controls
{
    struct AutoSuggestBox;
    struct ComboBox;
    struct IconElement;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls::Primitives
{
    enum class CornerRadiusFilterKind : int32_t
    {
        None = 0,
        Top = 1,
        Right = 2,
        Bottom = 3,
        Left = 4,
        TopLeftValue = 5,
        BottomRightValue = 6,
    };
    enum class CornerRadiusToThicknessConverterKind : int32_t
    {
        FilterTopAndBottomFromLeft = 0,
        FilterTopAndBottomFromRight = 1,
        FilterLeftAndRightFromTop = 2,
        FilterLeftAndRightFromBottom = 3,
    };
    struct IAutoSuggestBoxHelper;
    struct IAutoSuggestBoxHelperStatics;
    struct IColorPickerSlider;
    struct IColorPickerSliderFactory;
    struct IColorPickerSliderStatics;
    struct IColorSpectrum;
    struct IColorSpectrumFactory;
    struct IColorSpectrumStatics;
    struct IColumnMajorUniformToLargestGridLayout;
    struct IColumnMajorUniformToLargestGridLayoutFactory;
    struct IColumnMajorUniformToLargestGridLayoutStatics;
    struct IComboBoxHelper;
    struct IComboBoxHelperStatics;
    struct ICommandBarFlyoutCommandBar;
    struct ICommandBarFlyoutCommandBarFactory;
    struct ICommandBarFlyoutCommandBarTemplateSettings;
    struct ICornerRadiusFilterConverter;
    struct ICornerRadiusFilterConverterStatics;
    struct ICornerRadiusToThicknessConverter;
    struct ICornerRadiusToThicknessConverterStatics;
    struct INavigationViewItemPresenter;
    struct INavigationViewItemPresenterFactory;
    struct INavigationViewItemPresenterStatics;
    struct ITabViewListView;
    struct ITabViewListViewFactory;
    struct AutoSuggestBoxHelper;
    struct ColorPickerSlider;
    struct ColorSpectrum;
    struct ColumnMajorUniformToLargestGridLayout;
    struct ComboBoxHelper;
    struct CommandBarFlyoutCommandBar;
    struct CommandBarFlyoutCommandBarTemplateSettings;
    struct CornerRadiusFilterConverter;
    struct CornerRadiusToThicknessConverter;
    struct NavigationViewItemPresenter;
    struct TabViewListView;
}
namespace winrt::impl
{
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelper>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelperStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayout>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutFactory>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelper>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelperStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverter>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverterStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverter>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverterStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListView>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListViewFactory>{ using type = interface_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::AutoSuggestBoxHelper>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ColumnMajorUniformToLargestGridLayout>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ComboBoxHelper>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBar>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBarTemplateSettings>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusFilterConverter>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusToThicknessConverter>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::NavigationViewItemPresenter>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::TabViewListView>{ using type = class_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusFilterKind>{ using type = enum_category; };
    template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusToThicknessConverterKind>{ using type = enum_category; };
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::AutoSuggestBoxHelper> = L"Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider> = L"Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum> = L"Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ColumnMajorUniformToLargestGridLayout> = L"Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ComboBoxHelper> = L"Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBar> = L"Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBarTemplateSettings> = L"Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusFilterConverter> = L"Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusToThicknessConverter> = L"Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::NavigationViewItemPresenter> = L"Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::TabViewListView> = L"Microsoft.UI.Xaml.Controls.Primitives.TabViewListView";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusFilterKind> = L"Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusToThicknessConverterKind> = L"Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelper> = L"Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelper";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelperStatics> = L"Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider> = L"Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory> = L"Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics> = L"Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum> = L"Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory> = L"Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics> = L"Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayout> = L"Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutFactory> = L"Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutStatics> = L"Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelper> = L"Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelper";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelperStatics> = L"Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar> = L"Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory> = L"Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings> = L"Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverter> = L"Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverterStatics> = L"Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverter> = L"Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverterStatics> = L"Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter> = L"Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory> = L"Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics> = L"Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListView> = L"Microsoft.UI.Xaml.Controls.Primitives.ITabViewListView";
    template <> inline constexpr auto& name_v<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListViewFactory> = L"Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory";
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelper>{ 0x1E56736C,0x8248,0x57D9,{ 0xAC,0x04,0xE4,0xE7,0xDC,0xC3,0xF9,0xE1 } }; // 1E56736C-8248-57D9-AC04-E4E7DCC3F9E1
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelperStatics>{ 0x1FD01B5A,0x71AB,0x5D3A,{ 0x93,0xE7,0x14,0x1B,0xFD,0x6E,0xDF,0x6A } }; // 1FD01B5A-71AB-5D3A-93E7-141BFD6EDF6A
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider>{ 0x456231BB,0x5A4C,0x564B,{ 0x9B,0x3D,0x2F,0x15,0x70,0x61,0xA0,0xF8 } }; // 456231BB-5A4C-564B-9B3D-2F157061A0F8
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory>{ 0xD0CB1F0E,0x0771,0x5C7D,{ 0xBA,0x14,0xAA,0x43,0x11,0x79,0xB2,0xAC } }; // D0CB1F0E-0771-5C7D-BA14-AA431179B2AC
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics>{ 0x9792B197,0xC864,0x59F3,{ 0x9F,0xA0,0xE2,0x1C,0x7F,0xD4,0x6B,0x79 } }; // 9792B197-C864-59F3-9FA0-E21C7FD46B79
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>{ 0x75305916,0x882D,0x5667,{ 0xBF,0xD0,0x0A,0xF7,0x2D,0x50,0x2D,0x72 } }; // 75305916-882D-5667-BFD0-0AF72D502D72
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory>{ 0xEFECD442,0x8C2A,0x50A6,{ 0x88,0xA3,0x39,0x99,0xEA,0x01,0xF0,0x96 } }; // EFECD442-8C2A-50A6-88A3-3999EA01F096
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics>{ 0xAA1D251D,0x9E7B,0x5767,{ 0xAD,0xB9,0xFC,0xD3,0x68,0x55,0xD8,0x2E } }; // AA1D251D-9E7B-5767-ADB9-FCD36855D82E
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayout>{ 0xEE10A6AA,0xEFEB,0x51AC,{ 0xB7,0x91,0x71,0x91,0x3A,0xE8,0xC2,0x35 } }; // EE10A6AA-EFEB-51AC-B791-71913AE8C235
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutFactory>{ 0x2F21AF59,0x1585,0x5325,{ 0x84,0x12,0x2B,0x83,0xBF,0x05,0xD3,0x45 } }; // 2F21AF59-1585-5325-8412-2B83BF05D345
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutStatics>{ 0x29A1AC22,0xEE31,0x501F,{ 0x94,0xF8,0xA0,0x0D,0x33,0x8F,0x10,0x0A } }; // 29A1AC22-EE31-501F-94F8-A00D338F100A
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelper>{ 0x5A3C87AC,0xC399,0x5E5F,{ 0x87,0x3F,0xB9,0xD0,0xE8,0xBC,0xCE,0xB7 } }; // 5A3C87AC-C399-5E5F-873F-B9D0E8BCCEB7
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelperStatics>{ 0x59B4EB2D,0xBD79,0x59B2,{ 0xB3,0x43,0xFA,0x72,0xC7,0x47,0xD7,0x2A } }; // 59B4EB2D-BD79-59B2-B343-FA72C747D72A
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar>{ 0x0F7120C5,0x6D00,0x5489,{ 0x91,0x71,0xBE,0xDD,0x2D,0x4E,0xF6,0x77 } }; // 0F7120C5-6D00-5489-9171-BEDD2D4EF677
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory>{ 0x58DBCDA9,0x38E4,0x5EFC,{ 0xB7,0x40,0x26,0xFD,0xA3,0xD0,0xA3,0xC6 } }; // 58DBCDA9-38E4-5EFC-B740-26FDA3D0A3C6
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings>{ 0x533CC5CA,0xDCF7,0x5F9D,{ 0xA4,0x60,0x93,0x4A,0x88,0x3A,0xCD,0xC1 } }; // 533CC5CA-DCF7-5F9D-A460-934A883ACDC1
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverter>{ 0x6F1A3ED2,0xF965,0x545E,{ 0xBD,0x44,0x44,0x1D,0xB1,0x79,0x4F,0x5F } }; // 6F1A3ED2-F965-545E-BD44-441DB1794F5F
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverterStatics>{ 0xF1A547F3,0x4C0E,0x5F23,{ 0x9F,0x1E,0xA4,0xC0,0x8C,0xAB,0xDE,0x88 } }; // F1A547F3-4C0E-5F23-9F1E-A4C08CABDE88
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverter>{ 0x04F7ECA4,0x89C2,0x5731,{ 0xAF,0xF9,0x6B,0x66,0xB0,0xA0,0xC0,0x1E } }; // 04F7ECA4-89C2-5731-AFF9-6B66B0A0C01E
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverterStatics>{ 0x0409BA7E,0x9267,0x573E,{ 0x93,0x77,0xFF,0x8A,0x2B,0xD9,0xC6,0x2D } }; // 0409BA7E-9267-573E-9377-FF8A2BD9C62D
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter>{ 0x6C43C315,0xDE90,0x520E,{ 0x90,0x6B,0x83,0x17,0xB7,0x56,0x4B,0x97 } }; // 6C43C315-DE90-520E-906B-8317B7564B97
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory>{ 0xB28B0160,0x022C,0x593C,{ 0xAB,0x9A,0x7B,0x3D,0xED,0x2C,0x07,0x54 } }; // B28B0160-022C-593C-AB9A-7B3DED2C0754
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics>{ 0x48265FC1,0x761E,0x5F41,{ 0x81,0x66,0xFA,0x51,0x73,0x3A,0x45,0xEF } }; // 48265FC1-761E-5F41-8166-FA51733A45EF
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListView>{ 0xEC48EFB5,0x2CB3,0x562B,{ 0x92,0x1C,0xE5,0x54,0x92,0x3C,0xE1,0xD5 } }; // EC48EFB5-2CB3-562B-921C-E554923CE1D5
    template <> inline constexpr guid guid_v<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListViewFactory>{ 0x8A084FDD,0x86F0,0x51EE,{ 0x98,0xDF,0x5F,0xBD,0x0B,0x56,0x69,0xBE } }; // 8A084FDD-86F0-51EE-98DF-5FBD0B5669BE
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::AutoSuggestBoxHelper>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelper; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ColumnMajorUniformToLargestGridLayout>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayout; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ComboBoxHelper>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelper; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBar>{ using type = Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBarTemplateSettings>{ using type = Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusFilterConverter>{ using type = Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverter; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusToThicknessConverter>{ using type = Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverter; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::NavigationViewItemPresenter>{ using type = Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter; };
    template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::TabViewListView>{ using type = Microsoft::UI::Xaml::Controls::Primitives::ITabViewListView; };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelper>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelperStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_KeepInteriorCornersSquareProperty(void**) noexcept = 0;
            virtual int32_t __stdcall SetKeepInteriorCornersSquare(void*, bool) noexcept = 0;
            virtual int32_t __stdcall GetKeepInteriorCornersSquare(void*, bool*) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_ColorChannel(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_ColorChannel(int32_t) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_ColorChannelProperty(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_Color(struct struct_Windows_UI_Color*) noexcept = 0;
            virtual int32_t __stdcall put_Color(struct struct_Windows_UI_Color) noexcept = 0;
            virtual int32_t __stdcall get_HsvColor(Windows::Foundation::Numerics::float4*) noexcept = 0;
            virtual int32_t __stdcall put_HsvColor(Windows::Foundation::Numerics::float4) noexcept = 0;
            virtual int32_t __stdcall get_MinHue(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MinHue(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_MaxHue(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MaxHue(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_MinSaturation(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MinSaturation(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_MaxSaturation(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MaxSaturation(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_MinValue(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MinValue(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_MaxValue(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MaxValue(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_Shape(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Shape(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_Components(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Components(int32_t) noexcept = 0;
            virtual int32_t __stdcall add_ColorChanged(void*, winrt::event_token*) noexcept = 0;
            virtual int32_t __stdcall remove_ColorChanged(winrt::event_token) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_ColorProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_HsvColorProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_MinHueProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_MaxHueProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_MinSaturationProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_MaxSaturationProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_MinValueProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_MaxValueProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_ShapeProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_ComponentsProperty(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayout>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_MaxColumns(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MaxColumns(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_ColumnSpacing(double*) noexcept = 0;
            virtual int32_t __stdcall put_ColumnSpacing(double) noexcept = 0;
            virtual int32_t __stdcall get_RowSpacing(double*) noexcept = 0;
            virtual int32_t __stdcall put_RowSpacing(double) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutFactory>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_MaxColumnsProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_ColumnSpacingProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_RowSpacingProperty(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelper>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelperStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_KeepInteriorCornersSquareProperty(void**) noexcept = 0;
            virtual int32_t __stdcall SetKeepInteriorCornersSquare(void*, bool) noexcept = 0;
            virtual int32_t __stdcall GetKeepInteriorCornersSquare(void*, bool*) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_FlyoutTemplateSettings(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_OpenAnimationStartPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_OpenAnimationEndPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_CloseAnimationEndPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_CurrentWidth(double*) noexcept = 0;
            virtual int32_t __stdcall get_ExpandedWidth(double*) noexcept = 0;
            virtual int32_t __stdcall get_WidthExpansionDelta(double*) noexcept = 0;
            virtual int32_t __stdcall get_WidthExpansionAnimationStartPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_WidthExpansionAnimationEndPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_WidthExpansionMoreButtonAnimationStartPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_WidthExpansionMoreButtonAnimationEndPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_ExpandUpOverflowVerticalPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_ExpandDownOverflowVerticalPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_ExpandUpAnimationStartPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_ExpandUpAnimationEndPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_ExpandUpAnimationHoldPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_ExpandDownAnimationStartPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_ExpandDownAnimationEndPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_ExpandDownAnimationHoldPosition(double*) noexcept = 0;
            virtual int32_t __stdcall get_ContentClipRect(Windows::Foundation::Rect*) noexcept = 0;
            virtual int32_t __stdcall get_OverflowContentClipRect(Windows::Foundation::Rect*) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverter>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_Filter(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Filter(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_Scale(double*) noexcept = 0;
            virtual int32_t __stdcall put_Scale(double) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverterStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_FilterProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_ScaleProperty(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverter>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_ConversionKind(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_ConversionKind(int32_t) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverterStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_ConversionKindProperty(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_Icon(void**) noexcept = 0;
            virtual int32_t __stdcall put_Icon(void*) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_IconProperty(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListView>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
        };
    };
    template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListViewFactory>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**, void**) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IAutoSuggestBoxHelper
    {
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelper>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IAutoSuggestBoxHelper<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IAutoSuggestBoxHelperStatics
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) KeepInteriorCornersSquareProperty() const;
        WINRT_IMPL_AUTO(void) SetKeepInteriorCornersSquare(Windows::UI::Xaml::Controls::AutoSuggestBox const& autoSuggestBox, bool value) const;
        WINRT_IMPL_AUTO(bool) GetKeepInteriorCornersSquare(Windows::UI::Xaml::Controls::AutoSuggestBox const& autoSuggestBox) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IAutoSuggestBoxHelperStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IAutoSuggestBoxHelperStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSlider
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::ColorPickerHsvChannel) ColorChannel() const;
        WINRT_IMPL_AUTO(void) ColorChannel(Microsoft::UI::Xaml::Controls::ColorPickerHsvChannel const& value) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSlider<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSliderFactory
    {
        WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider) CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSliderFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSliderStatics
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) ColorChannelProperty() const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSliderStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrum
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Color) Color() const;
        WINRT_IMPL_AUTO(void) Color(Windows::UI::Color const& value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::Foundation::Numerics::float4) HsvColor() const;
        WINRT_IMPL_AUTO(void) HsvColor(Windows::Foundation::Numerics::float4 const& value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MinHue() const;
        WINRT_IMPL_AUTO(void) MinHue(int32_t value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MaxHue() const;
        WINRT_IMPL_AUTO(void) MaxHue(int32_t value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MinSaturation() const;
        WINRT_IMPL_AUTO(void) MinSaturation(int32_t value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MaxSaturation() const;
        WINRT_IMPL_AUTO(void) MaxSaturation(int32_t value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MinValue() const;
        WINRT_IMPL_AUTO(void) MinValue(int32_t value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MaxValue() const;
        WINRT_IMPL_AUTO(void) MaxValue(int32_t value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::ColorSpectrumShape) Shape() const;
        WINRT_IMPL_AUTO(void) Shape(Microsoft::UI::Xaml::Controls::ColorSpectrumShape const& value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::ColorSpectrumComponents) Components() const;
        WINRT_IMPL_AUTO(void) Components(Microsoft::UI::Xaml::Controls::ColorSpectrumComponents const& value) const;
        WINRT_IMPL_AUTO(winrt::event_token) ColorChanged(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum, Microsoft::UI::Xaml::Controls::ColorChangedEventArgs> const& handler) const;
        using ColorChanged_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>::remove_ColorChanged>;
        [[nodiscard]] ColorChanged_revoker ColorChanged(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum, Microsoft::UI::Xaml::Controls::ColorChangedEventArgs> const& handler) const;
        WINRT_IMPL_AUTO(void) ColorChanged(winrt::event_token const& token) const noexcept;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrum<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrumFactory
    {
        WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum) CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrumFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrumStatics
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) ColorProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) HsvColorProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) MinHueProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) MaxHueProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) MinSaturationProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) MaxSaturationProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) MinValueProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) MaxValueProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) ShapeProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) ComponentsProperty() const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrumStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColumnMajorUniformToLargestGridLayout
    {
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MaxColumns() const;
        WINRT_IMPL_AUTO(void) MaxColumns(int32_t value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ColumnSpacing() const;
        WINRT_IMPL_AUTO(void) ColumnSpacing(double value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) RowSpacing() const;
        WINRT_IMPL_AUTO(void) RowSpacing(double value) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayout>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColumnMajorUniformToLargestGridLayout<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColumnMajorUniformToLargestGridLayoutFactory
    {
        WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::Primitives::ColumnMajorUniformToLargestGridLayout) CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColumnMajorUniformToLargestGridLayoutFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColumnMajorUniformToLargestGridLayoutStatics
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) MaxColumnsProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) ColumnSpacingProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) RowSpacingProperty() const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColumnMajorUniformToLargestGridLayoutStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColumnMajorUniformToLargestGridLayoutStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IComboBoxHelper
    {
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelper>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IComboBoxHelper<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_IComboBoxHelperStatics
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) KeepInteriorCornersSquareProperty() const;
        WINRT_IMPL_AUTO(void) SetKeepInteriorCornersSquare(Windows::UI::Xaml::Controls::ComboBox const& comboBox, bool value) const;
        WINRT_IMPL_AUTO(bool) GetKeepInteriorCornersSquare(Windows::UI::Xaml::Controls::ComboBox const& comboBox) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IComboBoxHelperStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IComboBoxHelperStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBar
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBarTemplateSettings) FlyoutTemplateSettings() const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBar<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBarFactory
    {
        WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBar) CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBarFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBarTemplateSettings
    {
        [[nodiscard]] WINRT_IMPL_AUTO(double) OpenAnimationStartPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) OpenAnimationEndPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) CloseAnimationEndPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) CurrentWidth() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ExpandedWidth() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) WidthExpansionDelta() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) WidthExpansionAnimationStartPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) WidthExpansionAnimationEndPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) WidthExpansionMoreButtonAnimationStartPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) WidthExpansionMoreButtonAnimationEndPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ExpandUpOverflowVerticalPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ExpandDownOverflowVerticalPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ExpandUpAnimationStartPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ExpandUpAnimationEndPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ExpandUpAnimationHoldPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ExpandDownAnimationStartPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ExpandDownAnimationEndPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) ExpandDownAnimationHoldPosition() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::Foundation::Rect) ContentClipRect() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::Foundation::Rect) OverflowContentClipRect() const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBarTemplateSettings<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICornerRadiusFilterConverter
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusFilterKind) Filter() const;
        WINRT_IMPL_AUTO(void) Filter(Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusFilterKind const& value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(double) Scale() const;
        WINRT_IMPL_AUTO(void) Scale(double value) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverter>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICornerRadiusFilterConverter<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICornerRadiusFilterConverterStatics
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) FilterProperty() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) ScaleProperty() const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusFilterConverterStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICornerRadiusFilterConverterStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICornerRadiusToThicknessConverter
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusToThicknessConverterKind) ConversionKind() const;
        WINRT_IMPL_AUTO(void) ConversionKind(Microsoft::UI::Xaml::Controls::Primitives::CornerRadiusToThicknessConverterKind const& value) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverter>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICornerRadiusToThicknessConverter<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICornerRadiusToThicknessConverterStatics
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) ConversionKindProperty() const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICornerRadiusToThicknessConverterStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICornerRadiusToThicknessConverterStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenter
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::Controls::IconElement) Icon() const;
        WINRT_IMPL_AUTO(void) Icon(Windows::UI::Xaml::Controls::IconElement const& value) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenter<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenterFactory
    {
        WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::Primitives::NavigationViewItemPresenter) CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenterFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenterStatics
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::UI::Xaml::DependencyProperty) IconProperty() const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenterStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_ITabViewListView
    {
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListView>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ITabViewListView<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Controls_Primitives_ITabViewListViewFactory
    {
        WINRT_IMPL_AUTO(Microsoft::UI::Xaml::Controls::Primitives::TabViewListView) CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ITabViewListViewFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ITabViewListViewFactory<D>;
    };
}
#endif
